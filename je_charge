import pandas as pd
from COA import GL_CODE_MAP



def create_journal_from_charges(charges):
    journal = []

    for _, row in charges.iterrows():
        # Revenue from charge
        if row['net_charge'] > 0:
            journal.append({
                'period': row['Period'],
                'account': 'Storage Revenue',
                'gl_code': GL_CODE_MAP['Storage Revenue'],
                'debit': 0,
                'credit': row['net_charge'],
                'description': f"Charge - {row['description']}",
                'tenant': row['tenant_name']
            })

        # Cash payment
        if row['cash_payment'] > 0:
            journal.append({
                'period': row['Period'],
                'account': 'Cash',
                'gl_code': GL_CODE_MAP['Cash'],
                'debit': row['cash_payment'],
                'credit': 0,
                'description': f"Cash - {row['description']}",
                'tenant': row['tenant_name']
            })

        # A/R for unpaid charge
        if row['outstanding_amount'] > 0:
            journal.append({
                'period': row['Period'],
                'account': 'Accounts Receivable',
                'gl_code': GL_CODE_MAP['Accounts Receivable'],
                'debit': row['outstanding_amount'],
                'credit': 0,
                'description': f"A/R - {row['description']}",
                'tenant': row['tenant_name']
            })

        # Advance payment only
        if row['late_fees'] > 0:
            journal.append({
                'period': row['Period'],
                'account': 'Storage Revenue - Late Fees',
                'gl_code': GL_CODE_MAP['Storage Revenue - Late Fees'],
                'debit': 0,
                'credit': abs(row['late_fees']),
                'description': f"Late Fees- {row['description']}",
                'tenant': row['tenant_name']
            })

    return pd.DataFrame(journal)

